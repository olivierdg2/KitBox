<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>